#!/bin/bash
# Job name
#PBS -N name
# Output files
#PBS -o ./name.o
#PBS -e ./name.e
# Queue name
#PBS -q short_cpuQ
# Set the maximum wall time
#PBS -l walltime=0:10:00
# Number of nodes, cpus, mpi processors and amount of memory
#PBS -l select=1:ncpus=64:ompthreads=64:mpiprocs=64:mem=4gb

# Modules for python and MPI
module load gcc91
module load mpich-3.2.1--gcc-9.1.0

gcc() {
    gcc-9.1.0 "$@"
}
gcc --version

# Print the name of the file that contains the list of the nodes assigned to the job and list all the nodes
NODES=$(cat $PBS_NODEFILE)
echo The running nodes are $NODES

# Get the list of unique nodes assigned to the job
NODES=$(sort -u $PBS_NODEFILE)
echo The running nodes are $NODES

# Loop through each node and get architecture information
for NODE in $NODES; do
    echo "Node: $NODE"
    ssh $NODE "lscpu"
done

# Select the working directory 
cd /home/leonardo.chiste/transpose_mpi

mpicc mpi_row_blocks.c -o rows -fopenmp

for i in 16 32 64 128 256 512 1024 2048 4096 
do
   mpirun -np 1 ./rows $i
   mpirun -np 2 ./rows $i
   mpirun -np 4 ./rows $i
   mpirun -np 8 ./rows $i
   mpirun -np 16 ./rows $i
   mpirun -np 32 ./rows $i
   mpirun -np 64 ./rows $i
done
for i in 16 32 64 128 256 512 1024 2048 4096 
do
   mpirun -np 1 ./rows $i
   mpirun -np 2 ./rows $i
   mpirun -np 4 ./rows $i
   mpirun -np 8 ./rows $i
   mpirun -np 16 ./rows $i
   mpirun -np 32 ./rows $i
   mpirun -np 64 ./rows $i
done
for i in 16 32 64 128 256 512 1024 2048 4096 
do
   mpirun -np 1 ./rows $i
   mpirun -np 2 ./rows $i
   mpirun -np 4 ./rows $i
   mpirun -np 8 ./rows $i
   mpirun -np 16 ./rows $i
   mpirun -np 32 ./rows $i
   mpirun -np 64 ./rows $i
done

mpirun -np 1 ./rows 512
mpirun -np 4 ./rows 1024
mpirun -np 16 ./rows 2048
mpirun -np 64 ./rows 4096










